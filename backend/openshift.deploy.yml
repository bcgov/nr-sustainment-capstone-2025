apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: REPO
    description: Repository name
    value: nr-sustainment-capstone-2025
  - name: TAG
    description: Image tag; e.g. PR number or latest
    required: true
  - name: COMPONENT
    description: Component name
    value: backend
  - name: TARGET
    description: Deployment target; e.g. PR number, test or prod
    required: true
  - name: POSTGRES_PASSWORD
    required: true
objects:
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
        deployment: ${REPO}-${TARGET}-${COMPONENT}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      strategy:
        type: Recreate
      selector:
        matchLabels:
          deployment: ${REPO}-${TARGET}-${COMPONENT}
      template:
        metadata:
          labels:
            app: ${REPO}-${TARGET}
            deployment: ${REPO}-${TARGET}-${COMPONENT}
            service: ${REPO}-${TARGET}-${COMPONENT}
        spec:
          containers:
            - name: ${REPO}-${TARGET}-${COMPONENT}
              image: ghcr.io/bcgov/${REPO}/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              env:
                - name: LOG_LEVEL
                  value: info
                - name: POSTGRES_HOST
                  value: ${REPO}-${TARGET}-database
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-user
                - name: DATABASE_URL
                  value: postgresql://postgres:${POSTGRES_PASSWORD}@${REPO}-${TARGET}-database:5432/postgres?schema=public
              ports:
                - containerPort: 3000
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /api/health
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 90
                periodSeconds: 15
                timeoutSeconds: 10
                successThreshold: 3
                failureThreshold: 30
              # livenessProbe:
              #   successThreshold: 1
              #   failureThreshold: 5
              #   httpGet:
              #     path: /api/health
              #     port: 3000
              #     scheme: HTTP
              #   initialDelaySeconds: 15
              #   periodSeconds: 30
              #   timeoutSeconds: 5
              resources:
                limits:
                  cpu: 500m
                  memory: 500Mi
                requests:
                  cpu: 100m
                  memory: 300Mi
          securityContext:
            capabilities:
              add: ["NET_BIND_SERVICE"]
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      host: ${REPO}-${TARGET}-${COMPONENT}.apps.silver.devops.gov.bc.ca
      port:
        targetPort: http-3000
      to:
        kind: Service
        name: ${REPO}-${TARGET}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      type: ClusterIP
      ports:
        - port: 80
          targetPort: 3000
          protocol: TCP
          name: http-3000
      selector:
        service: ${REPO}-${TARGET}-${COMPONENT}
